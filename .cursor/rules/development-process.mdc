# 開発プロセスルール

## 目的
プロジェクト開発における一貫性のある開発プロセスを確保し、効率的な作業フローを実現する

## 優先順位
プロジェクト全体のワークフローに関わる基本ルールとして最優先されるのだ！

## 適用条件
1. すべての開発作業
2. コードの変更、ビルド、テスト、デプロイの各フェーズ
3. チーム内のすべてのメンバー

## 関連ルール
- @go-compile.mdc
- @go-format.mdc
- @go-lint.mdc
- @go-test.mdc

## 内容

### 言語設定
- 日本語で対話すること
- コメントやドキュメントも日本語で記述すること
- コミットメッセージは日本語を基本とするが、英語も許容する

### 操作方法
- 基本的にすべての操作はMakefile経由で行うこと
- 直接 `go` コマンドを実行するのではなく、対応するMakeコマンドを使用すること
- 例:
  - `go build` → `make build`
  - `go test` → `make test`
  - `go fmt` → `make fmt`

### 作業完了通知
- 作業が完了したら `say` コマンドを使って報告すること
- Makefileに通知機能を組み込むこと
- 例: `say "ビルドが完了しました"`

### 作業フロー
1. 作業開始前に最新のコードを取得 (`git pull`)
2. コードを修正
3. フォーマットとリントを実行 (`make fmt && make lint`)
4. テストを実行 (`make test`)
5. 問題がなければビルド (`make build`)
6. 完了通知 (`say "作業が完了しました"`)
7. コミットとプッシュ 